"""Add ondelete cascade to AnalisisSimilitud foreign keys

Revision ID: 3d7a1795008f
Revises: 3262c5806bd9
Create Date: 2025-06-23 09:57:58.435783

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '3d7a1795008f'
down_revision = '3262c5806bd9'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('analisis_similitud', schema=None) as batch_op:
        batch_op.create_index('ix_similitud_entrega1', ['entrega_id_1'], unique=False)
        batch_op.create_index('ix_similitud_entrega2', ['entrega_id_2'], unique=False)

        # --- INICIO DE LA CORRECCIÓN ---
        # En lugar de dejar que Alembic adivine, le damos nombres explícitos.
        # Es posible que tus restricciones se llamen diferente. Si esto falla,
        # necesitarás inspeccionar tu BD para ver los nombres reales.
        # Pero estos nombres son convenciones comunes.
        
        # Primero, intenta borrar las restricciones si ya existen con un nombre predecible.
        # SQLite a veces no nombra las FK, así que este paso puede ser omitido si causa error.
        # Por seguridad, comentaremos los drop_constraint por ahora, ya que el create_foreign_key
        # a menudo los reemplaza implícitamente en SQLite.
        
        # batch_op.drop_constraint('fk_analisis_similitud_entrega_id_1_entrega', type_='foreignkey')
        # batch_op.drop_constraint('fk_analisis_similitud_entrega_id_2_entrega', type_='foreignkey')
        
        # Ahora, creamos las nuevas restricciones con nombres y ON DELETE CASCADE
        batch_op.create_foreign_key(
            'fk_analisis_similitud_entrega_id_1',  # Nombre de la restricción 1
            'entrega', ['entrega_id_1'], ['id'], 
            ondelete='CASCADE'
        )
        batch_op.create_foreign_key(
            'fk_analisis_similitud_entrega_id_2',  # Nombre de la restricción 2
            'entrega', ['entrega_id_2'], ['id'], 
            ondelete='CASCADE'
        )
        # --- FIN DE LA CORRECCIÓN ---


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('analisis_similitud', schema=None) as batch_op:
        # --- INICIO DE LA CORRECCIÓN ---
        # Borramos las restricciones que creamos en upgrade(), usando sus nombres.
        batch_op.drop_constraint('fk_analisis_similitud_entrega_id_1', type_='foreignkey')
        batch_op.drop_constraint('fk_analisis_similitud_entrega_id_2', type_='foreignkey')

        # Creamos las versiones antiguas (sin ON DELETE y sin nombre explícito)
        batch_op.create_foreign_key(None, 'entrega', ['entrega_id_1'], ['id'])
        batch_op.create_foreign_key(None, 'entrega', ['entrega_id_2'], ['id'])

        # Borramos los índices que creamos
        batch_op.drop_index('ix_similitud_entrega2')
        batch_op.drop_index('ix_similitud_entrega1')
        # --- FIN DE LA CORRECCIÓN ---
