"""Config formato por pregunta y drop tablas formato obsoletas

Revision ID: bea41c61ed08
Revises: 4fbc1e52bf52
Create Date: 2025-04-29 10:47:04.609296

"""
from alembic import op
import sqlalchemy as sa
# Importar text si se usa en server_default
from sqlalchemy.sql import text


# revision identifiers, used by Alembic.
revision = 'bea41c61ed08'
down_revision = '4fbc1e52bf52' # Asegúrate que este sea el ID de tu migración anterior
branch_labels = None
depends_on = None


def upgrade():
    print("Starting upgrade bea41c61ed08...")
    # ### commands auto generated by Alembic - ADAPTED! ###

    # --- 1. Drop obsolete tables ---
    try:
        print("Dropping table regla_formato...")
        op.drop_table('regla_formato')
        print("Dropped table regla_formato.")
    except Exception as e:
        print(f"Warning: Could not drop table regla_formato (may not exist): {e}")
    try:
        print("Dropping table analisis_formato...")
        op.drop_table('analisis_formato')
        print("Dropped table analisis_formato.")
    except Exception as e:
        print(f"Warning: Could not drop table analisis_formato (may not exist): {e}")
    try:
        print("Dropping table examen_herramienta...")
        op.drop_table('examen_herramienta')
        print("Dropped table examen_herramienta.")
    except Exception as e:
        print(f"Warning: Could not drop table examen_herramienta (may not exist): {e}")

    # --- 2. Add column to pregunta ---
    print("Altering table pregunta...")
    with op.batch_alter_table('pregunta', schema=None) as batch_op:
        try:
            print("  Adding column configuracion_formato_json...")
            batch_op.add_column(sa.Column('configuracion_formato_json', sa.Text(), nullable=True, comment='Configuración del linter en JSON. Ej: {"perfil": "flake8", "args_adicionales": "--ignore=E501"}'))
            print("  Column added.")
        except Exception as e:
            print(f"Warning: Could not add column configuracion_formato_json (may already exist): {e}")

    # --- 3. Modify configuracion_examen (Optional Rename) ---
    print("Altering table configuracion_examen...")
    with op.batch_alter_table('configuracion_examen', schema=None) as batch_op:
        try:
            print("  Renaming column habilitar_rendimiento to habilitar_pruebas_funcionales...")
            # Quita existing_type si causa problemas o no estás seguro
            batch_op.alter_column('habilitar_rendimiento', new_column_name='habilitar_pruebas_funcionales') #, existing_type=sa.BOOLEAN())
            print("  Column renamed.")
        except Exception as e:
            print(f"Warning: Could not rename habilitar_rendimiento (may already be renamed or non-existent): {e}")

    # --- 4. Modify analisis_metrica (Adjust FK - handled by batch) ---
    print("Altering table analisis_metrica (ensuring FK)...")
    with op.batch_alter_table('analisis_metrica', schema=None) as batch_op:
        # batch_op.drop_constraint(None, type_='foreignkey') # REMOVED/COMMENTED
        # batch_op.create_foreign_key(None, 'entrega', ['entrega_id'], ['id'], ondelete='CASCADE') # REMOVED/COMMENTED
        print("  Skipping explicit FK drop/create (handled by batch recreation if needed).")


    # --- 5. Modify analisis_resultado ---
    print("Altering table analisis_resultado...")
    with op.batch_alter_table('analisis_resultado', schema=None) as batch_op:
        try:
            print("  Adding column fecha_analisis...")
            # Usar server_default=text(...) para compatibilidad
            batch_op.add_column(sa.Column('fecha_analisis', sa.DateTime(), server_default=text('CURRENT_TIMESTAMP'), nullable=False))
            print("  Column added.")
        except Exception as e:
            print(f"Warning: Could not add column fecha_analisis (may already exist): {e}")
        try:
            print("  Altering column herramienta_id (nullable=True)...")
            batch_op.alter_column('herramienta_id',
                   existing_type=sa.INTEGER(),
                   nullable=True)
            print("  Column altered.")
        except Exception as e:
             print(f"Warning: Could not alter column herramienta_id: {e}")

        # batch_op.drop_constraint(None, type_='foreignkey') # REMOVED/COMMENTED (for herramienta_id)
        # batch_op.drop_constraint(None, type_='foreignkey') # REMOVED/COMMENTED (for entrega_id)
        # batch_op.create_foreign_key(None, 'herramienta_analisis', ['herramienta_id'], ['id'], ondelete='SET NULL') # REMOVED/COMMENTED
        # batch_op.create_foreign_key(None, 'entrega', ['entrega_id'], ['id'], ondelete='CASCADE') # REMOVED/COMMENTED
        print("  Skipping explicit FK drop/create (handled by batch recreation if needed).")


    # --- 6. Modify analisis_similitud (Adjust FKs - handled by batch) ---
    print("Altering table analisis_similitud (ensuring FKs)...")
    with op.batch_alter_table('analisis_similitud', schema=None) as batch_op:
        # batch_op.drop_constraint(None, type_='foreignkey') # REMOVED/COMMENTED (for entrega_id_1)
        # batch_op.drop_constraint(None, type_='foreignkey') # REMOVED/COMMENTED (for entrega_id_2)
        # batch_op.create_foreign_key(None, 'entrega', ['entrega_id_2'], ['id'], ondelete='CASCADE') # REMOVED/COMMENTED
        # batch_op.create_foreign_key(None, 'entrega', ['entrega_id_1'], ['id'], ondelete='CASCADE') # REMOVED/COMMENTED
        print("  Skipping explicit FK drop/create (handled by batch recreation if needed).")


    # --- 7. Modify herramienta_analisis ---
    print("Altering table herramienta_analisis...")
    with op.batch_alter_table('herramienta_analisis', schema=None) as batch_op:
        try:
            print("  Adding column nombre_mostrado...")
            batch_op.add_column(sa.Column('nombre_mostrado', sa.String(length=150), nullable=True)) # Allow null temporarily
            print("  Column added.")
        except Exception as e:
            print(f"Warning: Could not add column nombre_mostrado: {e}")
        try:
            print("  Adding column descripcion...")
            batch_op.add_column(sa.Column('descripcion', sa.Text(), nullable=True))
            print("  Column added.")
        except Exception as e:
            print(f"Warning: Could not add column descripcion: {e}")
        try:
            print("  Altering column tipo_analisis_id (nullable=True)...")
            batch_op.alter_column('tipo_analisis_id',
                   existing_type=sa.INTEGER(),
                   nullable=True)
            print("  Column altered.")
        except Exception as e:
             print(f"Warning: Could not alter column tipo_analisis_id: {e}")
        try:
            print("  Creating index ix_herramienta_analisis_lenguaje...")
            batch_op.create_index(batch_op.f('ix_herramienta_analisis_lenguaje'), ['lenguaje'], unique=False)
            print("  Index created.")
        except Exception as e:
            print(f"Warning: Could not create index ix_herramienta_analisis_lenguaje: {e}")

        # batch_op.drop_constraint(None, type_='foreignkey') # REMOVED/COMMENTED (for tipo_analisis_id)
        # batch_op.create_foreign_key(None, 'tipo_analisis', ['tipo_analisis_id'], ['id'], ondelete='SET NULL') # REMOVED/COMMENTED
        print("  Skipping explicit FK drop/create for tipo_analisis_id (handled by batch).")

    # --- Populate nombre_mostrado and make NOT NULL ---
    print("Populating herramienta_analisis.nombre_mostrado...")
    try:
        op.execute("UPDATE herramienta_analisis SET nombre_mostrado = nombre WHERE nombre_mostrado IS NULL OR nombre_mostrado = ''")
        print("Populated.")
    except Exception as e:
        print(f"Warning: Could not populate nombre_mostrado: {e}")

    print("Making herramienta_analisis.nombre_mostrado NOT NULL...")
    with op.batch_alter_table('herramienta_analisis', schema=None) as batch_op:
        try:
            batch_op.alter_column('nombre_mostrado',
               existing_type=sa.String(length=150),
               nullable=False)
            print("Column made NOT NULL.")
        except Exception as e:
            print(f"Warning: Could not make nombre_mostrado NOT NULL: {e}")


    # ### end Alembic commands ###
    print("Finished upgrade bea41c61ed08.")


def downgrade():
    print("Starting downgrade from bea41c61ed08...")
    # ### commands auto generated by Alembic - ADAPTED! ###

    # --- Revert herramienta_analisis ---
    print("Altering table herramienta_analisis (downgrade)...")
    with op.batch_alter_table('herramienta_analisis', schema=None) as batch_op:
        # batch_op.drop_constraint(None, type_='foreignkey') # REMOVED/COMMENTED
        # batch_op.create_foreign_key(None, 'tipo_analisis', ['tipo_analisis_id'], ['id']) # REMOVED/COMMENTED
        try: batch_op.drop_index(batch_op.f('ix_herramienta_analisis_lenguaje'))
        except Exception as e: print(f"Warning: Could not drop index: {e}")
        try:
             batch_op.alter_column('tipo_analisis_id',
                   existing_type=sa.INTEGER(),
                   nullable=False) # Revert to NOT NULL if it was before
        except Exception as e: print(f"Warning: Could not alter tipo_analisis_id: {e}")
        try: batch_op.drop_column('descripcion')
        except Exception as e: print(f"Warning: Could not drop descripcion: {e}")
        try: batch_op.drop_column('nombre_mostrado')
        except Exception as e: print(f"Warning: Could not drop nombre_mostrado: {e}")
        print("  Skipping explicit FK handling for tipo_analisis_id (handled by batch).")

    # --- Revert analisis_similitud ---
    print("Altering table analisis_similitud (downgrade)...")
    with op.batch_alter_table('analisis_similitud', schema=None) as batch_op:
        # batch_op.drop_constraint(None, type_='foreignkey') # REMOVED/COMMENTED
        # batch_op.drop_constraint(None, type_='foreignkey') # REMOVED/COMMENTED
        # batch_op.create_foreign_key(None, 'entrega', ['entrega_id_1'], ['id']) # REMOVED/COMMENTED
        # batch_op.create_foreign_key(None, 'entrega', ['entrega_id_2'], ['id']) # REMOVED/COMMENTED
        print("  Skipping explicit FK handling (handled by batch).")

    # --- Revert analisis_resultado ---
    print("Altering table analisis_resultado (downgrade)...")
    with op.batch_alter_table('analisis_resultado', schema=None) as batch_op:
        # batch_op.drop_constraint(None, type_='foreignkey') # REMOVED/COMMENTED (for entrega_id)
        # batch_op.drop_constraint(None, type_='foreignkey') # REMOVED/COMMENTED (for herramienta_id)
        # batch_op.create_foreign_key(None, 'entrega', ['entrega_id'], ['id']) # REMOVED/COMMENTED
        # batch_op.create_foreign_key(None, 'herramienta_analisis', ['herramienta_id'], ['id']) # REMOVED/COMMENTED
        try:
             batch_op.alter_column('herramienta_id',
                   existing_type=sa.INTEGER(),
                   nullable=False) # Revert nullable
        except Exception as e: print(f"Warning: Could not alter herramienta_id: {e}")
        try: batch_op.drop_column('fecha_analisis')
        except Exception as e: print(f"Warning: Could not drop fecha_analisis: {e}")
        print("  Skipping explicit FK handling (handled by batch).")

    # --- Revert analisis_metrica ---
    print("Altering table analisis_metrica (downgrade)...")
    with op.batch_alter_table('analisis_metrica', schema=None) as batch_op:
        # batch_op.drop_constraint(None, type_='foreignkey') # REMOVED/COMMENTED
        # batch_op.create_foreign_key(None, 'entrega', ['entrega_id'], ['id']) # REMOVED/COMMENTED
        print("  Skipping explicit FK handling (handled by batch).")

    # --- Revert configuracion_examen (Optional Rename) ---
    print("Altering table configuracion_examen (downgrade)...")
    with op.batch_alter_table('configuracion_examen', schema=None) as batch_op:
        try:
            # Quita existing_type si da problemas
            batch_op.alter_column('habilitar_pruebas_funcionales', new_column_name='habilitar_rendimiento') #, existing_type=sa.BOOLEAN())
        except Exception as e:
            print(f"Warning: Could not revert rename to habilitar_rendimiento: {e}")

    # --- Revert pregunta ---
    print("Altering table pregunta (downgrade)...")
    with op.batch_alter_table('pregunta', schema=None) as batch_op:
        try:
             batch_op.drop_column('configuracion_formato_json')
        except Exception as e: print(f"Warning: Could not drop configuracion_formato_json: {e}")

    # --- Re-create dropped tables ---
    print("Re-creating dropped tables...")
    try:
        op.create_table('examen_herramienta',
        sa.Column('examen_id', sa.INTEGER(), nullable=False),
        sa.Column('herramienta_id', sa.INTEGER(), nullable=False),
        sa.ForeignKeyConstraint(['examen_id'], ['examen.id'], ),
        sa.ForeignKeyConstraint(['herramienta_id'], ['herramienta_analisis.id'], ),
        sa.PrimaryKeyConstraint('examen_id', 'herramienta_id')
        )
    except Exception as e: print(f"Warning: Could not re-create table examen_herramienta: {e}")
    try:
        op.create_table('analisis_formato',
        sa.Column('id', sa.INTEGER(), nullable=False),
        sa.Column('entrega_id', sa.INTEGER(), nullable=False),
        sa.Column('regla_id', sa.INTEGER(), nullable=False),
        sa.Column('resultado', sa.BOOLEAN(), nullable=False),
        sa.Column('comentario', sa.TEXT(), nullable=True),
        sa.ForeignKeyConstraint(['entrega_id'], ['entrega.id'], ),
        sa.ForeignKeyConstraint(['regla_id'], ['regla_formato.id'], ),
        sa.PrimaryKeyConstraint('id')
        )
    except Exception as e: print(f"Warning: Could not re-create table analisis_formato: {e}")
    try:
        op.create_table('regla_formato',
        sa.Column('id', sa.INTEGER(), nullable=False),
        sa.Column('nombre', sa.VARCHAR(length=100), nullable=False),
        sa.Column('descripcion', sa.TEXT(), nullable=False),
        sa.Column('tipo', sa.VARCHAR(length=50), nullable=False),
        sa.PrimaryKeyConstraint('id')
        )
    except Exception as e: print(f"Warning: Could not re-create table regla_formato: {e}")

    # ### end Alembic commands ###
    print("Finished downgrade from bea41c61ed08.")